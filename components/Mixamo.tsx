/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef } from 'react'
import { OrbitControls, useAnimations, useGLTF } from '@react-three/drei'
import { Canvas, useLoader } from '@react-three/fiber';
import { FBXLoader } from 'three/examples/jsm/loaders/FBXLoader'
// @ts-ignore
import fbxUrl from './moonwalk.fbx';


function MixamoModel(props) {
  console.log('LOADING ASSETS FROM', process.env.SERVER_URL);
  
  const fbx: any = useLoader(FBXLoader, fbxUrl);
  const { actions } = useAnimations(fbx.animations, fbx);
  
  useEffect( ()=> {
    console.log(actions);
    if (actions['mixamo.com']) {
      actions['mixamo.com'].play();
    }
  }, [actions])

  return <primitive {...props} object={fbx}  />
}

useGLTF.preload(fbxUrl);


const Mixamo = () => (
  <div className={'CanvasWrapper'}>
    <Canvas 
      camera={{ position: [0, 30, -15] ,up: [0,0,1] }}
    >
      <ambientLight />
      <pointLight position={[10, 10, 10]} />
      <MixamoModel 
        position={[0, 0, -20]} 
        scale={[0.1, 0.1, 0.1]} 
        rotation={[-Math.PI / 2, 0, Math.PI ]}
      />
      <mesh position={[0, 0, -20]}>
          <planeBufferGeometry attach="geometry" args={[2500, 2500]}  />
          <meshPhongMaterial attach="material" color="blue" />
      </mesh>
      <OrbitControls 
        // autoRotate
        enablePan={false}
        minPolarAngle={Math.PI / 2}
        maxPolarAngle={Math.PI / 2}
      />
    </Canvas>
  </div>
);

export default Mixamo;